{% load static %}
<h2 class="text-center py-4"> Pokemon </h2>
<div class="row row-cols-1 row-cols-md-2 g-4"></div>


<div id="container">
    <div id="form">
        <form>
            <h1>New Pokemon Information</h1>
            <input type="" v-model="newPokemon.number" placeholder="Number"><br>
            <input type="text" v-model="newPokemon.name" placeholder=" Name"><br>
            <input type="number" v-model="newPokemon.height" placeholder="Height"><br>
            <input type="number" v-model="newPokemon.weight" placeholder="Weight"><br>
            <input type="image" v-model="newPokemon.image_front" placeholder="Image Front"><br>
            <input type="image" v-model="newPokemon.image_back" placeholder="Image Back"><br>
            <button id="formBtn" @click="submitPokemon">Submit</button>
        </form>
    </div>
</div>
<body>
    {% csrf_token %}
    <div id="app">
        <ul>
            <li v-for="item in pokemon" :key="post.id">
                <h3>[[ pokemon.number ]]</h3>
                <h4>[[ pokemon.author_detail.username ]]</h4>
                <h4>[[ pokemon.created ]]</h4>
                <p>[[ post.body ]]</p>
            </li>
        </ul>
        <div>
            <input type="text" placeholder="Title" v-model="newPost.title">
            <template v-if="postErrors.title">
                <p v-for="error in postErrors.title">[[ error ]]</p>
            </template>
            <!-- <select v-model="newPost.author">
                <option v-for="user in users" :value="user.id">[[ user.username]]</option>
            </select>
            <template v-if="postErrors.author">
                <p v-for="error in postErrors.author">[[ error ]]</p>
            </template> -->
            <textarea v-model="newPost.body" placeholder="Post"></textarea>
            <template v-if="postErrors.body">
                <p v-for="error in postErrors.body">[[ error ]]</p>
            </template>
            <button @click="createPost">New Post</button>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>
    <script>
        const vm = new Vue({
            el: '#app',
            delimiters: ['[[', ']]'],
            data: {
                pokemon: [],
                users: [],
                currentUser: {},
                newPost: {
                    "name": "",
                    "author": null,
                    "body": ""
                },
                csrf_token: "",
                postErrors: {}
            },
            methods: {
                loadPokemon: function() {
                    axios({
                        method: 'get',
                        url: '/api/v1/pokemon/'
                    }).then(response => this.pokemon = response.data)
                },
                loadUsers: function() {
                    axios({
                        method: 'get',
                        url: '/api/v1/users/'
                    }).then(response => this.users = response.data)
                },
                createPokemon: function() {
                    axios({
                        method: 'post',
                        url: '/api/v1/pokemon/',
                        headers: {
                            "X-CSRFToken": this.csrf_token
                        },
                        data: {
                            "name": this.newPost.title,
                            // "author": this.newPost.author,
                            "author": this.currentUser.id,
                            "body": this.newPost.body
                        }
                    }).then(response => {
                        this.loadPokemon()
                        this.newPost = {
                            "title": "",
                            "author": null,
                            "body": ""
                        }
                        this.postErrors = {}
                    }).catch(error => {
                        this.postErrors = error.response.data
                    })
                },
                loadCurrentUser: function() {
                    axios({
                        method: 'get',
                        url: '/api/v1/currentuser/'
                    }).then(response => this.currentUser = response.data)
                }
            },
            created: function() {
                this.loadPokemon()
                this.loadUsers()
                this.loadCurrentUser()
            },
            mounted: function() {
                this.csrf_token = document.querySelector("input[name=csrfmiddlewaretoken]").value
            }
        })
    </script>
</body>
</html>